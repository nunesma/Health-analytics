<<<<<<< HEAD
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
result[5, 1:i] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
=======
<<<<<<< HEAD
install.packages(c("CDM", "DescTools", "fansi", "icd", "ipred", "JuliaCall", "lme4", "mirt", "pkgconfig", "processx", "rattle", "RcppArmadillo", "rlang", "rpart.plot", "sandwich", "stringi"))
install.packages(c("icd", "lme4", "stringi"))
install.packages(c("icd", "lme4", "stringi", "VGAM", "XML"))
install.packages(c("callr", "car", "chron", "clue"))
install.packages(c("digest", "doBy", "Epi", "epiR"))
install.packages(c("jomo", "later", "lme4", "micemd", "plotrix", "R.rsp"))
install.packages(c("R.utils", "stringi", "VGAM", "wordcloud", "XML"))
install.packages(c("stringi", "tinytex", "xtable", "xts"))
install.packages(c("digest", "icd", "plotmo", "pls", "stringi", "xts"))
install.packages(c("ape", "asbio", "carData", "CDM", "cli", "commonmark"))
install.packages(c("CDM", "commonmark", "covr", "data.table", "digest", "expm", "flexclust", "htmlwidgets"))
install.packages(c("later", "lavaan", "magic", "maptools", "MCMCpack", "miceadds", "nloptr"))
install.packages(c("OpenMx", "optimx", "pkgbuild", "pROC", "robustbase", "semTools"))
install.packages(c("spData", "stringi", "TAM", "TTR", "units", "webshot", "xts", "zoo"))
install.packages(c("CDM", "commonmark", "data.table", "nloptr", "stringi", "TAM"))
install.packages(c("antiword", "CDM", "coda", "commonmark", "data.table", "digest", "evaluate", "fansi", "gamlss", "gamlss.data", "gamlss.dist", "magick", "mime", "nloptr", "OpenMx", "plotrix", "pmml", "R6", "Rcpp", "rstudioapi", "rticles", "StanHeaders", "stringi", "TAM"))
install.packages(c("digest", "rticles", "stringi"))
install.packages(c("digest", "rticles", "stringi", "sysfonts", "tidyselect"))
install.packages(c("digest", "stringi", "sysfonts", "tidyselect"))
install.packages(c("covr", "dendextend", "devtools", "dplyr", "MASS", "miceadds", "NLP", "ps", "rgeos", "sf", "stringi"))
setwd("C:/Users/nunes/AI/ml/Health-analytics/zinc_in_elderly")
zinc <- read.csv("zinc.csv")
zinc <- read.csv("zinc.csv", sep =";")
str(zinc)
summaary(zinc)
summary(zinc)
names(zinc)
# explore variables
summary(zinc[1:])
# explore variables
summary(zinc[,1:])
# explore variables
summary(zinc[:,1:8])
zinc[:,1:8]
zinc[,1:8]
zinc[,2:9]
summary(zinc[,2:9])
# explore variables
summary(zinc[,2:9])
# par(mfrow=c(1,2))
hist(zinc$age, main = "", xlab = "Age")
hist(zinc$alb, main = "", xlab = "Age")
hist(zinc$znc, main = "", xlab = "Age")
plot(zinc$age,zinc$znc, main = "", xlab = "Age")
plot(zinc$alb, zinc$znc,main = "", xlab = "Age")
plot(zinc$znc, zinc$znc,main = "", xlab = "Age")
cor(zinc[,2:9])
wilcox.test(zinc$znc,zinc$sex)
wilcox.test(zinc$znc ~ zinc$sex)
wilcox.test(zinc$znc ~ zinc$sex)
wilcox.test(zinc$znc ~ zinc$icu)
wilcox.test(zinc$znc ~ zinc$ren)
wilcox.test(zinc$znc ~ zinc$lbd)
wilcox.test(zinc$znc ~ zinc$hlk)
tapply(zinc$znc, zinc$sex, summary)
tapply(zinc$znc, zinc$icu, summary)
tapply(zinc$znc, zinc$ren, summary)
tapply(zinc$znc, zinc$lbd, summary)
tapply(zinc$znc, zinc$hlk, summary)
zinc$sex <- as.numeric(as.character(zinc$sex) == "female")
zinc$icu <- as.numeric(as.character(zinc$icu) == "yes")
zinc$ren <- as.numeric(as.character(zinc$ren) == "yes")
zinc$lbd <- as.numeric(as.character(zinc$lbd) == "yes")
zinc$hlk <- as.numeric(as.character(zinc$hlk) == "yes")
# explore variables
summary(zinc[,2:9])
cor(zinc[,2:9])
model1 <- lm(znc ~ age + alb + sex + icu + ren + lbd + hlk, data = zinc)
aov(model1)
summary(model1)
model2 <- lm(znc ~ age + alb + icu + ren + lbd + hlk, data = zinc)
aov(model2)
summary(model2)
model3 <- lm(znc ~ age + alb + ren + lbd + hlk, data = zinc)
aov(model3)
summary(model3)
model4 <- lm(znc ~ age + alb + ren + lbd, data = zinc)
aov(model4)
summary(model4)
model5 <- lm(znc ~ age + alb + ren , data = zinc)
aov(model5)
summary(model5)
mod1 <- lm(znc ~ age, data = zinc); summary(mod1)
mod2 <- lm(znc ~ alb, data = zinc); summary(mod2)
mod3 <- lm(znc ~ sex, data = zinc); summary(mod3)
mod4 <- lm(znc ~ icu, data = zinc); summary(mod4)
mod5 <- lm(znc ~ ren, data = zinc); summary(mod5)
mod6 <- lm(znc ~ lbd, data = zinc); summary(mod6)
mod7 <- lm(znc ~ hlk, data = zinc); summary(mod7)
mod8 <- lm(znc ~ age + alb + sex + icu + ren + lbd + hlk, data = zinc); summary(mod8)
boxplot(zinc$znc ~ zinc$sex)
boxplot(zinc$znc ~ zinc$sex)
boxplot(zinc$znc ~ zinc$icu)
boxplot(zinc$znc ~ zinc$ren)
boxplot(zinc$znc ~ zinc$lbd)
boxplot(zinc$znc ~ zinc$hlk)
# input data
zinc <- read.csv("zinc.csv", sep =";")
# explore variables
summary(zinc[,2:9])
# plots
# par(mfrow=c(1,2))
hist(zinc$age, main = "", xlab = "Age")
hist(zinc$alb, main = "", xlab = "Albumin")
hist(zinc$znc, main = "", xlab = "Zinc")
plot(zinc$age,zinc$znc, main = "", xlab = "Age")
boxplot(zinc$znc ~ zinc$sex, ylab = "Zinc", xlab = "Sex")
boxplot(zinc$znc ~ zinc$icu, ylab = "Zinc", xlab = "Intensive Care Unit")
boxplot(zinc$znc ~ zinc$ren, ylab = "Zinc", xlab = "Renal Dysfunction")
boxplot(zinc$znc ~ zinc$lbd, ylab = "Zinc", xlab = " Low Red Blood Cell Count")
boxplot(zinc$znc ~ zinc$hlk, ylab = "Zinc", xlab = "High Leukocyte COunt")
# bivariate analysis
tapply(zinc$znc, zinc$sex, summary)
tapply(zinc$znc, zinc$icu, summary)
tapply(zinc$znc, zinc$ren, summary)
tapply(zinc$znc, zinc$lbd, summary)
tapply(zinc$znc, zinc$hlk, summary)
# inference analysis
wilcox.test(zinc$znc ~ zinc$sex)
wilcox.test(zinc$znc ~ zinc$icu)
wilcox.test(zinc$znc ~ zinc$ren)
wilcox.test(zinc$znc ~ zinc$lbd)
wilcox.test(zinc$znc ~ zinc$hlk)
# preparing dummy variables
zinc$sex <- as.numeric(as.character(zinc$sex) == "female")
zinc$icu <- as.numeric(as.character(zinc$icu) == "yes")
zinc$ren <- as.numeric(as.character(zinc$ren) == "yes")
zinc$lbd <- as.numeric(as.character(zinc$lbd) == "yes")
zinc$hlk <- as.numeric(as.character(zinc$hlk) == "yes")
# correlation matrix
cor(zinc[,2:9])
# simple linear models
mod1 <- lm(znc ~ age, data = zinc); summary(mod1)
mod2 <- lm(znc ~ alb, data = zinc); summary(mod2)
mod3 <- lm(znc ~ sex, data = zinc); summary(mod3)
mod5 <- lm(znc ~ ren, data = zinc); summary(mod5)
mod6 <- lm(znc ~ lbd, data = zinc); summary(mod6)
mod4 <- lm(znc ~ icu, data = zinc); summary(mod4)
mod7 <- lm(znc ~ hlk, data = zinc); summary(mod7)
# multiple linear models
mod8 <- lm(znc ~ age + alb + sex + icu + ren + lbd + hlk, data = zinc); summary(mod8)
mod1
# input data
zinc <- read.csv("zinc.csv", sep =";")
# explore variables
summary(zinc[,2:9])
# plots
# par(mfrow=c(1,2))
=======
>>>>>>> 698c889c84bb25f5ba1a53c53155c1945617e7b5
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
result[, i] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
result[, 1:i] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
df
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df)
}
z
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
df <- cbind(df, df[i])
}
df
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
g <- (paste(z))
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
g
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
g <- (z)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
g
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
df <- data.frame(z)
df_total <- cbind(df_total,df)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
df_total = data.frame()
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
df <- data.frame(z)
df_total <- cbind(df_total,df)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
df_total = data.frame(matrix(nrow(x), (length(cat))))
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
df <- data.frame(z)
df_total <- cbind(df_total,df)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
df
df_total
df_total = data.frame(matrix(nrow(x), length(cat)))
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
df <- data.frame(z)
df_total <- cbind(df_total,df)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
df_total
df_total = data.frame(nrow(x), length(cat))
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
df <- data.frame(z)
df_total <- cbind(df_total,df)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
df_total
df_total = data.frame()
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
df <- data.frame(z)
df_total <- cbind(df_total,df)
#  result[, 1:3] <- z
#  reg = reg + 1
# retorna um data frame
#  df <- data.frame(z)
# retorna um data frame
#  nextcol <-  data.frame(z)
#  colnames(nextcol) <- c(paste("col", i, sep="")) # rename the comlum
#  df <- cbind(df, df[i])
}
df <- data.frame(col1=model)
x <- data.frame(a = c("ana", "diva", "ana", "lis", "lis"), b = c(23, 25, 23, 22, 22)); x
variable <- unique(x$a)
variable <- as.character(variable); variable
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[i] = z
}
b = c()
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[i] = z
}
b = data.frame()
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[,i] = z
}
variable <- unique(x$a)
variable <- as.character(variable); variable
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[5,i] = z
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
}
b
b = data.frame()
cont = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
colnames(b) <- paste("cid_", cont)
b[1:5,i] = z
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
colnames(i) <- paste("cid_", cont)
b[1:5,i] = z
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
colnames(z) <- paste("cid_", i)
b[1:5,i] = z
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
colnames(b) <- paste("cid_", i)
b[1:5,i] = z
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
colnames(b) <- c(paste("cid_", i))
b[1:5,i] = z
count = count +1
}
b = data.frame()
cont = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
count = count +1
}
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
count = count +1
}
count
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
print(paste("cid_", count))
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
print(paste("cid_"+count))
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
print(paste("cid", count))
count = count +1
}
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- (paste("cid", count))
count = count +1
}
b
count
c
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c[1,i] <- (paste("cid", count))
count = count +1
}
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c[,i] <- (paste("cid", count))
count = count +1
}
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- paste("cid", count)
count = count +1
}
b
count
c
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- count
count = count +1
}
b
count
c
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- apend(count, i)
count = count +1
}
b = data.frame()
count = 1
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- append(count, i)
count = count +1
}
b
count
c
?append
append(1:5, 0:1, after = 3)
length(variable)
1:length(variable)
as.caracter(1:length(variable))
as.character(1:length(variable))
paste("cid",as.character(1:length(variable)))
b = data.frame()
colnames(paste("cid",as.character(1:length(variable))))
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- append(count, i)
count = count +1
}
b
count
b = data.frame()
colnames(b) <- paste("cid",as.character(1:length(variable)))
paste("cid", (as.character(1:length(variable))
colnames(b) <- paste("cid", (as.character(1:length(variable)))
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- append(count, i)
count = count +1
}
b
count
c
append(1:5, 0:1, after = 3)
paste("cid", as.character(1:length(variable)))
e <- paste("cid", as.character(1:length(variable)))
colnames(b) <- e
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
c <- append(count, i)
count = count +1
}
b
x <- data.frame(a = c("ana", "diva", "ana", "lis", "lis"), b = c(23, 25, 23, 22, 22)); x
variable <- unique(x$a)
variable <- as.character(variable); variable
b = data.frame()
colnames(b) <- paste("cid", as.character(1:length(variable)))
x <- data.frame(a = c("ana", "diva", "ana", "lis", "lis"), b = c(23, 25, 23, 22, 22)); x
variable <- unique(x$a)
variable <- as.character(variable); variable
b = data.frame()
e <- paste("cid", as.character(1:length(variable)))
colnames(b) <- e
for (i in (1: length(variable))){
z = as.numeric((as.character(x[,1])) == variable[i])
print(z)
b[1:5,i] = z
}
b
x <- data.frame(a = c("ana", "diva", "ana", "lis", "lis"), b = c(23, 25, 23, 22, 22)); x
variable <- unique(x$a)
variable <- as.character(variable); variable
b = data.frame()
e <- paste("cid", as.character(1:length(variable)))
colnames(b) <- e
paste("cid", as.character(1:length(variable)))
e <- (paste("cid", as.character(1:length(variable))))
colnames(b) <- e
?data.frame
x <- data.frame(a = c("ana", "diva", "ana", "lis", "lis"), b = c(23, 25, 23, 22, 22)); x
variable <- unique(x$a)
variable <- as.character(variable); variable
b = data.frame()
e <- c(paste("cid", as.character(1:length(variable))))
colnames(b) <- e
c(paste("cid", as.character(1:length(variable))))
colnames(b) <- e
install.packages("zoo", dependencies = T)
minutes(3)
library(lubridate)
obj <- ymd_hm('2014-04-12 23:12', tz = 'Europe/Prague')
x <- ymd_hm('2014-04-12 23:12', tz = 'Europe/Prague')
minutes(obj) <- 07
minute(obj) <- 07
minute(x) <- 07
x(tz = "Europe/London")
tz(x, tz = "Europe/London")
with_tz(x, tz = "Europe/London")
y <- ymd_hm('2015-12-12 09:45', tz = 'Europe/Prague')
x - y
install.packages(c("antiword", "carData", "coda", "commonmark", "covr", "data.table", "dendextend", "devtools", "digest", "dplyr", "evaluate", "fansi", "gamlss", "gamlss.data", "gamlss.dist", "htmlwidgets", "magick", "MASS", "microbenchmark", "mime", "nanotime", "nloptr", "NLP", "OpenMx", "optimx", "pkgbuild", "pkgload", "plotrix", "pmml", "ps", "R6", "Rcpp", "RcppCCTZ", "rstudioapi", "rticles", "sf", "StanHeaders", "stringi", "survey", "sysfonts", "testthat", "tidyselect"))
install.packages("stringi")
?strptime
?aggregate
?ts
var(1, 5, 10, 3, 8, 12, 4)
?var
v <- c(1, 5, 10, 3, 8, 12, 4)
var(v)
mean(v)
sd(v)
a <- c(15, 4, 3, 8, 15, 22, 7, 9, 2, 3, 3, 12, 6)
summary(a)
setwd("C:/Users/Marco/version-control/data_analysis/Health-analytics/zinc_in_elderly")
<<<<<<< HEAD
knitr::opts_chunk$set(echo = TRUE)
```{r}
=======
zinc <- read.csv("zinc.csv", sep =";")
summary(zinc[,2:9])
>>>>>>> 0b0fb5bf958abb100c5a5b3733b1647f25f3d129
hist(zinc$age, main = "", xlab = "Age")
hist(zinc$alb, main = "", xlab = "Albumin")
hist(zinc$znc, main = "", xlab = "Zinc")
plot(zinc$age,zinc$znc, main = "", ylab = "Zinc", xlab = "Age")
plot(zinc$alb, zinc$znc,main = "", ylab = "Zinc", xlab = "Albumin")
boxplot(zinc$znc ~ zinc$sex, ylab = "Zinc", xlab = "Sex")
boxplot(zinc$znc ~ zinc$icu, ylab = "Zinc", xlab = "Intensive Care Unit")
boxplot(zinc$znc ~ zinc$ren, ylab = "Zinc", xlab = "Renal Dysfunction")
boxplot(zinc$znc ~ zinc$lbd, ylab = "Zinc", xlab = " Low Red Blood Cell Count")
boxplot(zinc$znc ~ zinc$hlk, ylab = "Zinc", xlab = "High Leukocyte Count")
<<<<<<< HEAD
# bivariate analysis
=======
>>>>>>> 0b0fb5bf958abb100c5a5b3733b1647f25f3d129
tapply(zinc$znc, zinc$sex, summary)
tapply(zinc$znc, zinc$icu, summary)
tapply(zinc$znc, zinc$ren, summary)
tapply(zinc$znc, zinc$lbd, summary)
tapply(zinc$znc, zinc$hlk, summary)
<<<<<<< HEAD
# inference analysis
wilcox.test(zinc$znc ~ zinc$sex)
wilcox.test(zinc$znc ~ zinc$icu)
wilcox.test(zinc$znc ~ zinc$ren)
wilcox.test(zinc$znc ~ zinc$lbd)
wilcox.test(zinc$znc ~ zinc$hlk)
# preparing dummy variables
=======
wilcox.test(zinc$znc ~ zinc$sex)
wilcox.test(zinc$znc ~ zinc$ren)
wilcox.test(zinc$znc ~ zinc$icu)
wilcox.test(zinc$znc ~ zinc$lbd)
wilcox.test(zinc$znc ~ zinc$hlk)
>>>>>>> 0b0fb5bf958abb100c5a5b3733b1647f25f3d129
zinc$sex <- as.numeric(as.character(zinc$sex) == "female")
zinc$icu <- as.numeric(as.character(zinc$icu) == "yes")
zinc$ren <- as.numeric(as.character(zinc$ren) == "yes")
zinc$lbd <- as.numeric(as.character(zinc$lbd) == "yes")
<<<<<<< HEAD
# correlation matrix
cor(zinc[,2:9])
zinc$hlk <- as.numeric(as.character(zinc$hlk) == "yes")
# simple linear models
=======
zinc$hlk <- as.numeric(as.character(zinc$hlk) == "yes")
cor(zinc[,2:9])
>>>>>>> 0b0fb5bf958abb100c5a5b3733b1647f25f3d129
mod1 <- lm(znc ~ age, data = zinc); summary(mod1)
mod2 <- lm(znc ~ alb, data = zinc); summary(mod2)
mod3 <- lm(znc ~ sex, data = zinc); summary(mod3)
mod4 <- lm(znc ~ icu, data = zinc); summary(mod4)
mod5 <- lm(znc ~ ren, data = zinc); summary(mod5)
<<<<<<< HEAD
mod7 <- lm(znc ~ hlk, data = zinc); summary(mod7)
mod6 <- lm(znc ~ lbd, data = zinc); summary(mod6)
# multiple linear models
=======
mod6 <- lm(znc ~ lbd, data = zinc); summary(mod6)
mod7 <- lm(znc ~ hlk, data = zinc); summary(mod7)
>>>>>>> 0b0fb5bf958abb100c5a5b3733b1647f25f3d129
mod8 <- lm(znc ~ age + alb + sex + icu + ren + lbd + hlk, data = zinc); summary(mod8)
>>>>>>> 698c889c84bb25f5ba1a53c53155c1945617e7b5
